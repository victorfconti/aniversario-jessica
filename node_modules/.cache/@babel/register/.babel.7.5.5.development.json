{
  "{\"minified\":true,\"sourceRoot\":\"/home/victor/WebstormProjects/aniversario-xesca\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/victor/WebstormProjects/aniversario-xesca\",\"filename\":\"/home/victor/WebstormProjects/aniversario-xesca/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":true,\"envName\":\"development\",\"root\":\"/home/victor/WebstormProjects/aniversario-xesca\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[{\"plugins\":[{\"key\":\"transform-minify-booleans\",\"visitor\":{\"BooleanLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"minify-builtins\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null]},\"CallExpression\":{\"exit\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-inline-consecutive-adds\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"minify-dead-code-elimination\",\"visitor\":{\"IfStatement\":{\"exit\":[null]},\"EmptyStatement\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"minify-constant-folding\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null,null]},\"MemberExpression\":{\"enter\":[null,null]},\"_exploded\":true,\"_verified\":true,\"ArrayExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ConditionalExpression\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Identifier\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"NumericLiteral\":{\"enter\":[null]},\"NullLiteral\":{\"enter\":[null]},\"BooleanLiteral\":{\"enter\":[null]},\"RegExpLiteral\":{\"enter\":[null]},\"LogicalExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"SequenceExpression\":{\"enter\":[null]},\"ParenthesizedExpression\":{\"enter\":[null]},\"ThisExpression\":{\"enter\":[null]},\"UnaryExpression\":{\"enter\":[null]},\"UpdateExpression\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"MetaProperty\":{\"enter\":[null]},\"Super\":{\"enter\":[null]},\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"YieldExpression\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]},\"AwaitExpression\":{\"enter\":[null]},\"BindExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"PipelinePrimaryTopicReference\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"Import\":{\"enter\":[null]},\"DoExpression\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"TSAsExpression\":{\"enter\":[null]},\"TSTypeAssertion\":{\"enter\":[null]},\"TSNonNullExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"minify-flip-comparisons\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"minify-guarded-expressions\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null,null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"minify-infinity\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"minify-mangle-names\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-merge-sibling-variables\",\"visitor\":{\"ForStatement\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null,null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"minify-numeric-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-regexp-constructors\",\"visitor\":{\"NewExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-remove-undefined\",\"visitor\":{\"SequenceExpression\":{\"enter\":[null]},\"ReturnStatement\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"minify-replace\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"minify-simplify\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null,null,null]},\"BinaryExpression\":{\"enter\":[null]},\"LogicalExpression\":{\"exit\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ConditionalExpression\":{\"enter\":[null,null],\"exit\":[null,null,null]},\"VariableDeclaration\":{\"enter\":[null],\"exit\":[null]},\"ForStatement\":{\"enter\":[null,null],\"exit\":[null,null,null]},\"Program\":{\"enter\":[null]},\"BlockStatement\":{\"enter\":[null],\"exit\":[null,null]},\"ThrowStatement\":{\"enter\":[null],\"exit\":[null]},\"ReturnStatement\":{\"enter\":[null,null],\"exit\":[null]},\"IfStatement\":{\"exit\":[null,null,null,null,null,null]},\"WhileStatement\":{\"enter\":[null],\"exit\":[null]},\"ForInStatement\":{\"enter\":[null,null],\"exit\":[null,null]},\"SequenceExpression\":{\"exit\":[null]},\"SwitchCase\":{\"enter\":[null]},\"SwitchStatement\":{\"exit\":[null,null,null,null,null]},\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null,null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]},\"ForOfStatement\":{\"enter\":[null],\"exit\":[null,null]},\"BreakStatement\":{\"exit\":[null]},\"ContinueStatement\":{\"exit\":[null]},\"DebuggerStatement\":{\"exit\":[null]},\"DoWhileStatement\":{\"exit\":[null]},\"EmptyStatement\":{\"exit\":[null]},\"ExpressionStatement\":{\"exit\":[null]},\"LabeledStatement\":{\"exit\":[null]},\"TryStatement\":{\"exit\":[null]},\"WithStatement\":{\"exit\":[null]},\"ClassDeclaration\":{\"exit\":[null]},\"ExportAllDeclaration\":{\"exit\":[null]},\"ExportDefaultDeclaration\":{\"exit\":[null]},\"ExportNamedDeclaration\":{\"exit\":[null]},\"ImportDeclaration\":{\"exit\":[null]},\"DeclareClass\":{\"exit\":[null]},\"DeclareFunction\":{\"exit\":[null]},\"DeclareInterface\":{\"exit\":[null]},\"DeclareModule\":{\"exit\":[null]},\"DeclareModuleExports\":{\"exit\":[null]},\"DeclareTypeAlias\":{\"exit\":[null]},\"DeclareOpaqueType\":{\"exit\":[null]},\"DeclareVariable\":{\"exit\":[null]},\"DeclareExportDeclaration\":{\"exit\":[null]},\"DeclareExportAllDeclaration\":{\"exit\":[null]},\"InterfaceDeclaration\":{\"exit\":[null]},\"OpaqueType\":{\"exit\":[null]},\"TypeAlias\":{\"exit\":[null]},\"TSDeclareFunction\":{\"exit\":[null]},\"TSInterfaceDeclaration\":{\"exit\":[null]},\"TSTypeAliasDeclaration\":{\"exit\":[null]},\"TSEnumDeclaration\":{\"exit\":[null]},\"TSModuleDeclaration\":{\"exit\":[null]},\"TSImportEqualsDeclaration\":{\"exit\":[null]},\"TSExportAssignment\":{\"exit\":[null]},\"TSNamespaceExportDeclaration\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-simplify-comparison-operators\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"minify-type-constructors\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-undefined-to-void\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}}]}]}:7.5.5": {
    "metadata": {},
    "options": {
      "minified": true,
      "sourceRoot": "/home/victor/WebstormProjects/aniversario-xesca",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/victor/WebstormProjects/aniversario-xesca",
      "filename": "/home/victor/WebstormProjects/aniversario-xesca/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/victor/WebstormProjects/aniversario-xesca",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": true,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [
        {
          "plugins": [
            {
              "key": "transform-minify-booleans",
              "visitor": {
                "BooleanLiteral": {
                  "enter": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "minify-builtins",
              "visitor": {
                "AssignmentExpression": {
                  "enter": [
                    null
                  ]
                },
                "MemberExpression": {
                  "enter": [
                    null
                  ]
                },
                "CallExpression": {
                  "exit": [
                    null
                  ]
                },
                "Program": {
                  "exit": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "transform-inline-consecutive-adds",
              "visitor": {
                "VariableDeclaration": {
                  "enter": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "minify-dead-code-elimination",
              "visitor": {
                "IfStatement": {
                  "exit": [
                    null
                  ]
                },
                "EmptyStatement": {
                  "enter": [
                    null
                  ]
                },
                "Program": {
                  "exit": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true,
                "FunctionDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "FunctionExpression": {
                  "exit": [
                    null
                  ]
                },
                "ObjectMethod": {
                  "exit": [
                    null
                  ]
                },
                "ArrowFunctionExpression": {
                  "exit": [
                    null
                  ]
                },
                "ClassMethod": {
                  "exit": [
                    null
                  ]
                },
                "ClassPrivateMethod": {
                  "exit": [
                    null
                  ]
                }
              },
              "options": {}
            },
            {
              "key": "minify-constant-folding",
              "visitor": {
                "BinaryExpression": {
                  "enter": [
                    null,
                    null
                  ]
                },
                "CallExpression": {
                  "enter": [
                    null,
                    null
                  ]
                },
                "MemberExpression": {
                  "enter": [
                    null,
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true,
                "ArrayExpression": {
                  "enter": [
                    null
                  ]
                },
                "AssignmentExpression": {
                  "enter": [
                    null
                  ]
                },
                "ConditionalExpression": {
                  "enter": [
                    null
                  ]
                },
                "FunctionExpression": {
                  "enter": [
                    null
                  ]
                },
                "Identifier": {
                  "enter": [
                    null
                  ]
                },
                "StringLiteral": {
                  "enter": [
                    null
                  ]
                },
                "NumericLiteral": {
                  "enter": [
                    null
                  ]
                },
                "NullLiteral": {
                  "enter": [
                    null
                  ]
                },
                "BooleanLiteral": {
                  "enter": [
                    null
                  ]
                },
                "RegExpLiteral": {
                  "enter": [
                    null
                  ]
                },
                "LogicalExpression": {
                  "enter": [
                    null
                  ]
                },
                "NewExpression": {
                  "enter": [
                    null
                  ]
                },
                "ObjectExpression": {
                  "enter": [
                    null
                  ]
                },
                "SequenceExpression": {
                  "enter": [
                    null
                  ]
                },
                "ParenthesizedExpression": {
                  "enter": [
                    null
                  ]
                },
                "ThisExpression": {
                  "enter": [
                    null
                  ]
                },
                "UnaryExpression": {
                  "enter": [
                    null
                  ]
                },
                "UpdateExpression": {
                  "enter": [
                    null
                  ]
                },
                "ArrowFunctionExpression": {
                  "enter": [
                    null
                  ]
                },
                "ClassExpression": {
                  "enter": [
                    null
                  ]
                },
                "MetaProperty": {
                  "enter": [
                    null
                  ]
                },
                "Super": {
                  "enter": [
                    null
                  ]
                },
                "TaggedTemplateExpression": {
                  "enter": [
                    null
                  ]
                },
                "TemplateLiteral": {
                  "enter": [
                    null
                  ]
                },
                "YieldExpression": {
                  "enter": [
                    null
                  ]
                },
                "TypeCastExpression": {
                  "enter": [
                    null
                  ]
                },
                "JSXElement": {
                  "enter": [
                    null
                  ]
                },
                "JSXFragment": {
                  "enter": [
                    null
                  ]
                },
                "AwaitExpression": {
                  "enter": [
                    null
                  ]
                },
                "BindExpression": {
                  "enter": [
                    null
                  ]
                },
                "OptionalMemberExpression": {
                  "enter": [
                    null
                  ]
                },
                "PipelinePrimaryTopicReference": {
                  "enter": [
                    null
                  ]
                },
                "OptionalCallExpression": {
                  "enter": [
                    null
                  ]
                },
                "Import": {
                  "enter": [
                    null
                  ]
                },
                "DoExpression": {
                  "enter": [
                    null
                  ]
                },
                "BigIntLiteral": {
                  "enter": [
                    null
                  ]
                },
                "TSAsExpression": {
                  "enter": [
                    null
                  ]
                },
                "TSTypeAssertion": {
                  "enter": [
                    null
                  ]
                },
                "TSNonNullExpression": {
                  "enter": [
                    null
                  ]
                }
              },
              "options": {}
            },
            {
              "key": "minify-flip-comparisons",
              "visitor": {
                "BinaryExpression": {
                  "enter": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "minify-guarded-expressions",
              "visitor": {
                "LogicalExpression": {
                  "enter": [
                    null,
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "minify-infinity",
              "visitor": {
                "Identifier": {
                  "enter": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "minify-mangle-names",
              "visitor": {
                "Program": {
                  "exit": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "transform-member-expression-literals",
              "visitor": {
                "MemberExpression": {
                  "exit": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "transform-merge-sibling-variables",
              "visitor": {
                "ForStatement": {
                  "enter": [
                    null
                  ]
                },
                "VariableDeclaration": {
                  "enter": [
                    null,
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "minify-numeric-literals",
              "visitor": {
                "NumericLiteral": {
                  "enter": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "transform-property-literals",
              "visitor": {
                "ObjectProperty": {
                  "exit": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "transform-regexp-constructors",
              "visitor": {
                "NewExpression": {
                  "enter": [
                    null
                  ]
                },
                "CallExpression": {
                  "enter": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "transform-remove-undefined",
              "visitor": {
                "SequenceExpression": {
                  "enter": [
                    null
                  ]
                },
                "ReturnStatement": {
                  "enter": [
                    null
                  ]
                },
                "VariableDeclaration": {
                  "enter": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "minify-replace",
              "visitor": {
                "Program": {
                  "enter": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "minify-simplify",
              "visitor": {
                "UnaryExpression": {
                  "enter": [
                    null,
                    null,
                    null
                  ]
                },
                "BinaryExpression": {
                  "enter": [
                    null
                  ]
                },
                "LogicalExpression": {
                  "exit": [
                    null
                  ]
                },
                "AssignmentExpression": {
                  "enter": [
                    null
                  ]
                },
                "ConditionalExpression": {
                  "enter": [
                    null,
                    null
                  ],
                  "exit": [
                    null,
                    null,
                    null
                  ]
                },
                "VariableDeclaration": {
                  "enter": [
                    null
                  ],
                  "exit": [
                    null
                  ]
                },
                "ForStatement": {
                  "enter": [
                    null,
                    null
                  ],
                  "exit": [
                    null,
                    null,
                    null
                  ]
                },
                "Program": {
                  "enter": [
                    null
                  ]
                },
                "BlockStatement": {
                  "enter": [
                    null
                  ],
                  "exit": [
                    null,
                    null
                  ]
                },
                "ThrowStatement": {
                  "enter": [
                    null
                  ],
                  "exit": [
                    null
                  ]
                },
                "ReturnStatement": {
                  "enter": [
                    null,
                    null
                  ],
                  "exit": [
                    null
                  ]
                },
                "IfStatement": {
                  "exit": [
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                  ]
                },
                "WhileStatement": {
                  "enter": [
                    null
                  ],
                  "exit": [
                    null
                  ]
                },
                "ForInStatement": {
                  "enter": [
                    null,
                    null
                  ],
                  "exit": [
                    null,
                    null
                  ]
                },
                "SequenceExpression": {
                  "exit": [
                    null
                  ]
                },
                "SwitchCase": {
                  "enter": [
                    null
                  ]
                },
                "SwitchStatement": {
                  "exit": [
                    null,
                    null,
                    null,
                    null,
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true,
                "FunctionDeclaration": {
                  "exit": [
                    null,
                    null
                  ]
                },
                "FunctionExpression": {
                  "exit": [
                    null
                  ]
                },
                "ObjectMethod": {
                  "exit": [
                    null
                  ]
                },
                "ArrowFunctionExpression": {
                  "exit": [
                    null
                  ]
                },
                "ClassMethod": {
                  "exit": [
                    null
                  ]
                },
                "ClassPrivateMethod": {
                  "exit": [
                    null
                  ]
                },
                "ForOfStatement": {
                  "enter": [
                    null
                  ],
                  "exit": [
                    null,
                    null
                  ]
                },
                "BreakStatement": {
                  "exit": [
                    null
                  ]
                },
                "ContinueStatement": {
                  "exit": [
                    null
                  ]
                },
                "DebuggerStatement": {
                  "exit": [
                    null
                  ]
                },
                "DoWhileStatement": {
                  "exit": [
                    null
                  ]
                },
                "EmptyStatement": {
                  "exit": [
                    null
                  ]
                },
                "ExpressionStatement": {
                  "exit": [
                    null
                  ]
                },
                "LabeledStatement": {
                  "exit": [
                    null
                  ]
                },
                "TryStatement": {
                  "exit": [
                    null
                  ]
                },
                "WithStatement": {
                  "exit": [
                    null
                  ]
                },
                "ClassDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "ExportAllDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "ExportDefaultDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "ExportNamedDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "ImportDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "DeclareClass": {
                  "exit": [
                    null
                  ]
                },
                "DeclareFunction": {
                  "exit": [
                    null
                  ]
                },
                "DeclareInterface": {
                  "exit": [
                    null
                  ]
                },
                "DeclareModule": {
                  "exit": [
                    null
                  ]
                },
                "DeclareModuleExports": {
                  "exit": [
                    null
                  ]
                },
                "DeclareTypeAlias": {
                  "exit": [
                    null
                  ]
                },
                "DeclareOpaqueType": {
                  "exit": [
                    null
                  ]
                },
                "DeclareVariable": {
                  "exit": [
                    null
                  ]
                },
                "DeclareExportDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "DeclareExportAllDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "InterfaceDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "OpaqueType": {
                  "exit": [
                    null
                  ]
                },
                "TypeAlias": {
                  "exit": [
                    null
                  ]
                },
                "TSDeclareFunction": {
                  "exit": [
                    null
                  ]
                },
                "TSInterfaceDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "TSTypeAliasDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "TSEnumDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "TSModuleDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "TSImportEqualsDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "TSExportAssignment": {
                  "exit": [
                    null
                  ]
                },
                "TSNamespaceExportDeclaration": {
                  "exit": [
                    null
                  ]
                }
              },
              "options": {}
            },
            {
              "key": "transform-simplify-comparison-operators",
              "visitor": {
                "BinaryExpression": {
                  "enter": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "minify-type-constructors",
              "visitor": {
                "CallExpression": {
                  "enter": [
                    null
                  ]
                },
                "NewExpression": {
                  "enter": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "transform-undefined-to-void",
              "visitor": {
                "_exploded": true,
                "_verified": true,
                "Identifier": {
                  "enter": [
                    null
                  ]
                },
                "JSXIdentifier": {
                  "enter": [
                    null
                  ]
                }
              },
              "options": {}
            }
          ]
        }
      ],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/victor/WebstormProjects/aniversario-xesca/app.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/victor/WebstormProjects/aniversario-xesca/app.js",
        "comments": true,
        "compact": "auto",
        "minified": true,
        "sourceMaps": "both",
        "sourceRoot": "/home/victor/WebstormProjects/aniversario-xesca",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";var _httpErrors=_interopRequireDefault(require(\"http-errors\"));function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}var express=require(\"express\"),path=require(\"path\"),cookieParser=require(\"cookie-parser\"),logger=require(\"morgan\"),session=require(\"express-session\"),indexRouter=require(\"./routes\"),app=express();// view engine setup\n// catch 404 and forward to error handler\n// error handler\napp.use(session({secret:\"ssshhhhh\",proxy:!0,resave:!0,saveUninitialized:!0})),app.set(\"views\",path.join(__dirname,\"views\")),app.set(\"view engine\",\"pug\"),app.use(logger(\"dev\")),app.use(express.json()),app.use(express.urlencoded({extended:!1})),app.use(cookieParser()),app.use(express[\"static\"](path.join(__dirname,\"public\"))),app.use(\"/\",indexRouter(express)),app.use(function(a,b,c){c((0,_httpErrors[\"default\"])(404))}),app.use(function(a,b,c){// set locals, only providing error in development\n// render the error page\nc.locals.message=a.message,c.locals.error=\"development\"===b.app.get(\"env\")?a:{},c.status(a.status||500),c.render(\"error\")}),module.exports=app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInBhdGgiLCJjb29raWVQYXJzZXIiLCJsb2dnZXIiLCJzZXNzaW9uIiwiaW5kZXhSb3V0ZXIiLCJhcHAiLCJ1c2UiLCJzZWNyZXQiLCJwcm94eSIsInJlc2F2ZSIsInNhdmVVbmluaXRpYWxpemVkIiwic2V0Iiwiam9pbiIsIl9fZGlybmFtZSIsImpzb24iLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJyZXEiLCJyZXMiLCJuZXh0IiwiZXJyIiwibG9jYWxzIiwibWVzc2FnZSIsImVycm9yIiwiZ2V0Iiwic3RhdHVzIiwicmVuZGVyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6ImFBQUEsK0QsMkVBQ0lBLENBQUFBLE9BQU8sQ0FBR0MsT0FBTyxDQUFDLFNBQUQsQyxDQUNqQkMsSUFBSSxDQUFHRCxPQUFPLENBQUMsTUFBRCxDLENBQ2RFLFlBQVksQ0FBR0YsT0FBTyxDQUFDLGVBQUQsQyxDQUN0QkcsTUFBTSxDQUFHSCxPQUFPLENBQUMsUUFBRCxDLENBQ2hCSSxPQUFPLENBQUdKLE9BQU8sQ0FBQyxpQkFBRCxDLENBQ2pCSyxXQUFXLENBQUdMLE9BQU8sQ0FBQyxVQUFELEMsQ0FFckJNLEdBQUcsQ0FBR1AsT0FBTyxFLENBSWpCO0FBWUE7QUFLQTtBQW5CQU8sR0FBRyxDQUFDQyxHQUFKLENBQVFILE9BQU8sQ0FBQyxDQUFDSSxNQUFNLENBQUUsVUFBVCxDQUFxQkMsS0FBSyxHQUExQixDQUFrQ0MsTUFBTSxHQUF4QyxDQUFnREMsaUJBQWlCLEdBQWpFLENBQUQsQ0FBZixDLENBR0FMLEdBQUcsQ0FBQ00sR0FBSixDQUFRLE9BQVIsQ0FBaUJYLElBQUksQ0FBQ1ksSUFBTCxDQUFVQyxTQUFWLENBQXFCLE9BQXJCLENBQWpCLEMsQ0FDQVIsR0FBRyxDQUFDTSxHQUFKLENBQVEsYUFBUixDQUF1QixLQUF2QixDLENBRUFOLEdBQUcsQ0FBQ0MsR0FBSixDQUFRSixNQUFNLENBQUMsS0FBRCxDQUFkLEMsQ0FDQUcsR0FBRyxDQUFDQyxHQUFKLENBQVFSLE9BQU8sQ0FBQ2dCLElBQVIsRUFBUixDLENBQ0FULEdBQUcsQ0FBQ0MsR0FBSixDQUFRUixPQUFPLENBQUNpQixVQUFSLENBQW1CLENBQUVDLFFBQVEsR0FBVixDQUFuQixDQUFSLEMsQ0FDQVgsR0FBRyxDQUFDQyxHQUFKLENBQVFMLFlBQVksRUFBcEIsQyxDQUNBSSxHQUFHLENBQUNDLEdBQUosQ0FBUVIsT0FBTyxVQUFQLENBQWVFLElBQUksQ0FBQ1ksSUFBTCxDQUFVQyxTQUFWLENBQXFCLFFBQXJCLENBQWYsQ0FBUixDLENBRUFSLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLEdBQVIsQ0FBYUYsV0FBVyxDQUFDTixPQUFELENBQXhCLEMsQ0FHQU8sR0FBRyxDQUFDQyxHQUFKLENBQVEsU0FBU1csQ0FBVCxDQUFjQyxDQUFkLENBQW1CQyxDQUFuQixDQUF5QixDQUMvQkEsQ0FBSSxDQUFDLDJCQUFZLEdBQVosQ0FBRCxDQUNMLENBRkQsQyxDQUtBZCxHQUFHLENBQUNDLEdBQUosQ0FBUSxTQUFTYyxDQUFULENBQWNILENBQWQsQ0FBbUJDLENBQW5CLENBQThCLENBQ3BDO0FBSUE7QUFIQUEsQ0FBRyxDQUFDRyxNQUFKLENBQVdDLE9BQVgsQ0FBcUJGLENBQUcsQ0FBQ0UsT0FGVyxDQUdwQ0osQ0FBRyxDQUFDRyxNQUFKLENBQVdFLEtBQVgsQ0FBMEMsYUFBdkIsR0FBQU4sQ0FBRyxDQUFDWixHQUFKLENBQVFtQixHQUFSLENBQVksS0FBWixFQUF1Q0osQ0FBdkMsQ0FBNkMsRUFINUIsQ0FNcENGLENBQUcsQ0FBQ08sTUFBSixDQUFXTCxDQUFHLENBQUNLLE1BQUosRUFBYyxHQUF6QixDQU5vQyxDQU9wQ1AsQ0FBRyxDQUFDUSxNQUFKLENBQVcsT0FBWCxDQUNELENBUkQsQyxDQVVBQyxNQUFNLENBQUNDLE9BQVAsQ0FBaUJ2QixHIiwic291cmNlUm9vdCI6Ii9ob21lL3ZpY3Rvci9XZWJzdG9ybVByb2plY3RzL2FuaXZlcnNhcmlvLXhlc2NhIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyZWF0ZUVycm9yIGZyb20gJ2h0dHAtZXJyb3JzJztcbnZhciBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xudmFyIHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG52YXIgY29va2llUGFyc2VyID0gcmVxdWlyZSgnY29va2llLXBhcnNlcicpO1xudmFyIGxvZ2dlciA9IHJlcXVpcmUoJ21vcmdhbicpO1xudmFyIHNlc3Npb24gPSByZXF1aXJlKCdleHByZXNzLXNlc3Npb24nKTtcbnZhciBpbmRleFJvdXRlciA9IHJlcXVpcmUoJy4vcm91dGVzJyk7XG5cbnZhciBhcHAgPSBleHByZXNzKCk7XG5cbmFwcC51c2Uoc2Vzc2lvbih7c2VjcmV0OiAnc3NzaGhoaGgnLCBwcm94eTogdHJ1ZSwgcmVzYXZlOiB0cnVlLCBzYXZlVW5pbml0aWFsaXplZDogdHJ1ZX0pKTtcblxuLy8gdmlldyBlbmdpbmUgc2V0dXBcbmFwcC5zZXQoJ3ZpZXdzJywgcGF0aC5qb2luKF9fZGlybmFtZSwgJ3ZpZXdzJykpO1xuYXBwLnNldCgndmlldyBlbmdpbmUnLCAncHVnJyk7XG5cbmFwcC51c2UobG9nZ2VyKCdkZXYnKSk7XG5hcHAudXNlKGV4cHJlc3MuanNvbigpKTtcbmFwcC51c2UoZXhwcmVzcy51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IGZhbHNlIH0pKTtcbmFwcC51c2UoY29va2llUGFyc2VyKCkpO1xuYXBwLnVzZShleHByZXNzLnN0YXRpYyhwYXRoLmpvaW4oX19kaXJuYW1lLCAncHVibGljJykpKTtcblxuYXBwLnVzZSgnLycsIGluZGV4Um91dGVyKGV4cHJlc3MpKTtcblxuLy8gY2F0Y2ggNDA0IGFuZCBmb3J3YXJkIHRvIGVycm9yIGhhbmRsZXJcbmFwcC51c2UoZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpIHtcbiAgbmV4dChjcmVhdGVFcnJvcig0MDQpKTtcbn0pO1xuXG4vLyBlcnJvciBoYW5kbGVyXG5hcHAudXNlKGZ1bmN0aW9uKGVyciwgcmVxLCByZXMsIG5leHQpIHtcbiAgLy8gc2V0IGxvY2Fscywgb25seSBwcm92aWRpbmcgZXJyb3IgaW4gZGV2ZWxvcG1lbnRcbiAgcmVzLmxvY2Fscy5tZXNzYWdlID0gZXJyLm1lc3NhZ2U7XG4gIHJlcy5sb2NhbHMuZXJyb3IgPSByZXEuYXBwLmdldCgnZW52JykgPT09ICdkZXZlbG9wbWVudCcgPyBlcnIgOiB7fTtcblxuICAvLyByZW5kZXIgdGhlIGVycm9yIHBhZ2VcbiAgcmVzLnN0YXR1cyhlcnIuc3RhdHVzIHx8IDUwMCk7XG4gIHJlcy5yZW5kZXIoJ2Vycm9yJyk7XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBhcHA7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "express",
        "require",
        "path",
        "cookieParser",
        "logger",
        "session",
        "indexRouter",
        "app",
        "use",
        "secret",
        "proxy",
        "resave",
        "saveUninitialized",
        "set",
        "join",
        "__dirname",
        "json",
        "urlencoded",
        "extended",
        "req",
        "res",
        "next",
        "err",
        "locals",
        "message",
        "error",
        "get",
        "status",
        "render",
        "module",
        "exports"
      ],
      "mappings": "aAAA,+D,2EACIA,CAAAA,OAAO,CAAGC,OAAO,CAAC,SAAD,C,CACjBC,IAAI,CAAGD,OAAO,CAAC,MAAD,C,CACdE,YAAY,CAAGF,OAAO,CAAC,eAAD,C,CACtBG,MAAM,CAAGH,OAAO,CAAC,QAAD,C,CAChBI,OAAO,CAAGJ,OAAO,CAAC,iBAAD,C,CACjBK,WAAW,CAAGL,OAAO,CAAC,UAAD,C,CAErBM,GAAG,CAAGP,OAAO,E,CAIjB;AAYA;AAKA;AAnBAO,GAAG,CAACC,GAAJ,CAAQH,OAAO,CAAC,CAACI,MAAM,CAAE,UAAT,CAAqBC,KAAK,GAA1B,CAAkCC,MAAM,GAAxC,CAAgDC,iBAAiB,GAAjE,CAAD,CAAf,C,CAGAL,GAAG,CAACM,GAAJ,CAAQ,OAAR,CAAiBX,IAAI,CAACY,IAAL,CAAUC,SAAV,CAAqB,OAArB,CAAjB,C,CACAR,GAAG,CAACM,GAAJ,CAAQ,aAAR,CAAuB,KAAvB,C,CAEAN,GAAG,CAACC,GAAJ,CAAQJ,MAAM,CAAC,KAAD,CAAd,C,CACAG,GAAG,CAACC,GAAJ,CAAQR,OAAO,CAACgB,IAAR,EAAR,C,CACAT,GAAG,CAACC,GAAJ,CAAQR,OAAO,CAACiB,UAAR,CAAmB,CAAEC,QAAQ,GAAV,CAAnB,CAAR,C,CACAX,GAAG,CAACC,GAAJ,CAAQL,YAAY,EAApB,C,CACAI,GAAG,CAACC,GAAJ,CAAQR,OAAO,UAAP,CAAeE,IAAI,CAACY,IAAL,CAAUC,SAAV,CAAqB,QAArB,CAAf,CAAR,C,CAEAR,GAAG,CAACC,GAAJ,CAAQ,GAAR,CAAaF,WAAW,CAACN,OAAD,CAAxB,C,CAGAO,GAAG,CAACC,GAAJ,CAAQ,SAASW,CAAT,CAAcC,CAAd,CAAmBC,CAAnB,CAAyB,CAC/BA,CAAI,CAAC,2BAAY,GAAZ,CAAD,CACL,CAFD,C,CAKAd,GAAG,CAACC,GAAJ,CAAQ,SAASc,CAAT,CAAcH,CAAd,CAAmBC,CAAnB,CAA8B,CACpC;AAIA;AAHAA,CAAG,CAACG,MAAJ,CAAWC,OAAX,CAAqBF,CAAG,CAACE,OAFW,CAGpCJ,CAAG,CAACG,MAAJ,CAAWE,KAAX,CAA0C,aAAvB,GAAAN,CAAG,CAACZ,GAAJ,CAAQmB,GAAR,CAAY,KAAZ,EAAuCJ,CAAvC,CAA6C,EAH5B,CAMpCF,CAAG,CAACO,MAAJ,CAAWL,CAAG,CAACK,MAAJ,EAAc,GAAzB,CANoC,CAOpCP,CAAG,CAACQ,MAAJ,CAAW,OAAX,CACD,CARD,C,CAUAC,MAAM,CAACC,OAAP,CAAiBvB,G",
      "sourceRoot": "/home/victor/WebstormProjects/aniversario-xesca",
      "sourcesContent": [
        "import createError from 'http-errors';\nvar express = require('express');\nvar path = require('path');\nvar cookieParser = require('cookie-parser');\nvar logger = require('morgan');\nvar session = require('express-session');\nvar indexRouter = require('./routes');\n\nvar app = express();\n\napp.use(session({secret: 'ssshhhhh', proxy: true, resave: true, saveUninitialized: true}));\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'pug');\n\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', indexRouter(express));\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  next(createError(404));\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\nmodule.exports = app;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1566097750395
  },
  "{\"minified\":true,\"sourceRoot\":\"/home/victor/WebstormProjects/aniversario-xesca/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/victor/WebstormProjects/aniversario-xesca\",\"filename\":\"/home/victor/WebstormProjects/aniversario-xesca/routes/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":true,\"envName\":\"development\",\"root\":\"/home/victor/WebstormProjects/aniversario-xesca\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[{\"plugins\":[{\"key\":\"transform-minify-booleans\",\"visitor\":{\"BooleanLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"minify-builtins\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null]},\"CallExpression\":{\"exit\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-inline-consecutive-adds\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"minify-dead-code-elimination\",\"visitor\":{\"IfStatement\":{\"exit\":[null]},\"EmptyStatement\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"minify-constant-folding\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null,null]},\"MemberExpression\":{\"enter\":[null,null]},\"_exploded\":true,\"_verified\":true,\"ArrayExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ConditionalExpression\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Identifier\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"NumericLiteral\":{\"enter\":[null]},\"NullLiteral\":{\"enter\":[null]},\"BooleanLiteral\":{\"enter\":[null]},\"RegExpLiteral\":{\"enter\":[null]},\"LogicalExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"SequenceExpression\":{\"enter\":[null]},\"ParenthesizedExpression\":{\"enter\":[null]},\"ThisExpression\":{\"enter\":[null]},\"UnaryExpression\":{\"enter\":[null]},\"UpdateExpression\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"MetaProperty\":{\"enter\":[null]},\"Super\":{\"enter\":[null]},\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"YieldExpression\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]},\"AwaitExpression\":{\"enter\":[null]},\"BindExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"PipelinePrimaryTopicReference\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"Import\":{\"enter\":[null]},\"DoExpression\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"TSAsExpression\":{\"enter\":[null]},\"TSTypeAssertion\":{\"enter\":[null]},\"TSNonNullExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"minify-flip-comparisons\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"minify-guarded-expressions\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null,null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"minify-infinity\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"minify-mangle-names\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-merge-sibling-variables\",\"visitor\":{\"ForStatement\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null,null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"minify-numeric-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-regexp-constructors\",\"visitor\":{\"NewExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-remove-undefined\",\"visitor\":{\"SequenceExpression\":{\"enter\":[null]},\"ReturnStatement\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"minify-replace\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"minify-simplify\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null,null,null]},\"BinaryExpression\":{\"enter\":[null]},\"LogicalExpression\":{\"exit\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ConditionalExpression\":{\"enter\":[null,null],\"exit\":[null,null,null]},\"VariableDeclaration\":{\"enter\":[null],\"exit\":[null]},\"ForStatement\":{\"enter\":[null,null],\"exit\":[null,null,null]},\"Program\":{\"enter\":[null]},\"BlockStatement\":{\"enter\":[null],\"exit\":[null,null]},\"ThrowStatement\":{\"enter\":[null],\"exit\":[null]},\"ReturnStatement\":{\"enter\":[null,null],\"exit\":[null]},\"IfStatement\":{\"exit\":[null,null,null,null,null,null]},\"WhileStatement\":{\"enter\":[null],\"exit\":[null]},\"ForInStatement\":{\"enter\":[null,null],\"exit\":[null,null]},\"SequenceExpression\":{\"exit\":[null]},\"SwitchCase\":{\"enter\":[null]},\"SwitchStatement\":{\"exit\":[null,null,null,null,null]},\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null,null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]},\"ForOfStatement\":{\"enter\":[null],\"exit\":[null,null]},\"BreakStatement\":{\"exit\":[null]},\"ContinueStatement\":{\"exit\":[null]},\"DebuggerStatement\":{\"exit\":[null]},\"DoWhileStatement\":{\"exit\":[null]},\"EmptyStatement\":{\"exit\":[null]},\"ExpressionStatement\":{\"exit\":[null]},\"LabeledStatement\":{\"exit\":[null]},\"TryStatement\":{\"exit\":[null]},\"WithStatement\":{\"exit\":[null]},\"ClassDeclaration\":{\"exit\":[null]},\"ExportAllDeclaration\":{\"exit\":[null]},\"ExportDefaultDeclaration\":{\"exit\":[null]},\"ExportNamedDeclaration\":{\"exit\":[null]},\"ImportDeclaration\":{\"exit\":[null]},\"DeclareClass\":{\"exit\":[null]},\"DeclareFunction\":{\"exit\":[null]},\"DeclareInterface\":{\"exit\":[null]},\"DeclareModule\":{\"exit\":[null]},\"DeclareModuleExports\":{\"exit\":[null]},\"DeclareTypeAlias\":{\"exit\":[null]},\"DeclareOpaqueType\":{\"exit\":[null]},\"DeclareVariable\":{\"exit\":[null]},\"DeclareExportDeclaration\":{\"exit\":[null]},\"DeclareExportAllDeclaration\":{\"exit\":[null]},\"InterfaceDeclaration\":{\"exit\":[null]},\"OpaqueType\":{\"exit\":[null]},\"TypeAlias\":{\"exit\":[null]},\"TSDeclareFunction\":{\"exit\":[null]},\"TSInterfaceDeclaration\":{\"exit\":[null]},\"TSTypeAliasDeclaration\":{\"exit\":[null]},\"TSEnumDeclaration\":{\"exit\":[null]},\"TSModuleDeclaration\":{\"exit\":[null]},\"TSImportEqualsDeclaration\":{\"exit\":[null]},\"TSExportAssignment\":{\"exit\":[null]},\"TSNamespaceExportDeclaration\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-simplify-comparison-operators\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"minify-type-constructors\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-undefined-to-void\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}}]}]}:7.5.5": {
    "metadata": {},
    "options": {
      "minified": true,
      "sourceRoot": "/home/victor/WebstormProjects/aniversario-xesca/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/victor/WebstormProjects/aniversario-xesca",
      "filename": "/home/victor/WebstormProjects/aniversario-xesca/routes/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/victor/WebstormProjects/aniversario-xesca",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": true,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [
        {
          "plugins": [
            {
              "key": "transform-minify-booleans",
              "visitor": {
                "BooleanLiteral": {
                  "enter": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "minify-builtins",
              "visitor": {
                "AssignmentExpression": {
                  "enter": [
                    null
                  ]
                },
                "MemberExpression": {
                  "enter": [
                    null
                  ]
                },
                "CallExpression": {
                  "exit": [
                    null
                  ]
                },
                "Program": {
                  "exit": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "transform-inline-consecutive-adds",
              "visitor": {
                "VariableDeclaration": {
                  "enter": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "minify-dead-code-elimination",
              "visitor": {
                "IfStatement": {
                  "exit": [
                    null
                  ]
                },
                "EmptyStatement": {
                  "enter": [
                    null
                  ]
                },
                "Program": {
                  "exit": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true,
                "FunctionDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "FunctionExpression": {
                  "exit": [
                    null
                  ]
                },
                "ObjectMethod": {
                  "exit": [
                    null
                  ]
                },
                "ArrowFunctionExpression": {
                  "exit": [
                    null
                  ]
                },
                "ClassMethod": {
                  "exit": [
                    null
                  ]
                },
                "ClassPrivateMethod": {
                  "exit": [
                    null
                  ]
                }
              },
              "options": {}
            },
            {
              "key": "minify-constant-folding",
              "visitor": {
                "BinaryExpression": {
                  "enter": [
                    null,
                    null
                  ]
                },
                "CallExpression": {
                  "enter": [
                    null,
                    null
                  ]
                },
                "MemberExpression": {
                  "enter": [
                    null,
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true,
                "ArrayExpression": {
                  "enter": [
                    null
                  ]
                },
                "AssignmentExpression": {
                  "enter": [
                    null
                  ]
                },
                "ConditionalExpression": {
                  "enter": [
                    null
                  ]
                },
                "FunctionExpression": {
                  "enter": [
                    null
                  ]
                },
                "Identifier": {
                  "enter": [
                    null
                  ]
                },
                "StringLiteral": {
                  "enter": [
                    null
                  ]
                },
                "NumericLiteral": {
                  "enter": [
                    null
                  ]
                },
                "NullLiteral": {
                  "enter": [
                    null
                  ]
                },
                "BooleanLiteral": {
                  "enter": [
                    null
                  ]
                },
                "RegExpLiteral": {
                  "enter": [
                    null
                  ]
                },
                "LogicalExpression": {
                  "enter": [
                    null
                  ]
                },
                "NewExpression": {
                  "enter": [
                    null
                  ]
                },
                "ObjectExpression": {
                  "enter": [
                    null
                  ]
                },
                "SequenceExpression": {
                  "enter": [
                    null
                  ]
                },
                "ParenthesizedExpression": {
                  "enter": [
                    null
                  ]
                },
                "ThisExpression": {
                  "enter": [
                    null
                  ]
                },
                "UnaryExpression": {
                  "enter": [
                    null
                  ]
                },
                "UpdateExpression": {
                  "enter": [
                    null
                  ]
                },
                "ArrowFunctionExpression": {
                  "enter": [
                    null
                  ]
                },
                "ClassExpression": {
                  "enter": [
                    null
                  ]
                },
                "MetaProperty": {
                  "enter": [
                    null
                  ]
                },
                "Super": {
                  "enter": [
                    null
                  ]
                },
                "TaggedTemplateExpression": {
                  "enter": [
                    null
                  ]
                },
                "TemplateLiteral": {
                  "enter": [
                    null
                  ]
                },
                "YieldExpression": {
                  "enter": [
                    null
                  ]
                },
                "TypeCastExpression": {
                  "enter": [
                    null
                  ]
                },
                "JSXElement": {
                  "enter": [
                    null
                  ]
                },
                "JSXFragment": {
                  "enter": [
                    null
                  ]
                },
                "AwaitExpression": {
                  "enter": [
                    null
                  ]
                },
                "BindExpression": {
                  "enter": [
                    null
                  ]
                },
                "OptionalMemberExpression": {
                  "enter": [
                    null
                  ]
                },
                "PipelinePrimaryTopicReference": {
                  "enter": [
                    null
                  ]
                },
                "OptionalCallExpression": {
                  "enter": [
                    null
                  ]
                },
                "Import": {
                  "enter": [
                    null
                  ]
                },
                "DoExpression": {
                  "enter": [
                    null
                  ]
                },
                "BigIntLiteral": {
                  "enter": [
                    null
                  ]
                },
                "TSAsExpression": {
                  "enter": [
                    null
                  ]
                },
                "TSTypeAssertion": {
                  "enter": [
                    null
                  ]
                },
                "TSNonNullExpression": {
                  "enter": [
                    null
                  ]
                }
              },
              "options": {}
            },
            {
              "key": "minify-flip-comparisons",
              "visitor": {
                "BinaryExpression": {
                  "enter": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "minify-guarded-expressions",
              "visitor": {
                "LogicalExpression": {
                  "enter": [
                    null,
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "minify-infinity",
              "visitor": {
                "Identifier": {
                  "enter": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "minify-mangle-names",
              "visitor": {
                "Program": {
                  "exit": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "transform-member-expression-literals",
              "visitor": {
                "MemberExpression": {
                  "exit": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "transform-merge-sibling-variables",
              "visitor": {
                "ForStatement": {
                  "enter": [
                    null
                  ]
                },
                "VariableDeclaration": {
                  "enter": [
                    null,
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "minify-numeric-literals",
              "visitor": {
                "NumericLiteral": {
                  "enter": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "transform-property-literals",
              "visitor": {
                "ObjectProperty": {
                  "exit": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "transform-regexp-constructors",
              "visitor": {
                "NewExpression": {
                  "enter": [
                    null
                  ]
                },
                "CallExpression": {
                  "enter": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "transform-remove-undefined",
              "visitor": {
                "SequenceExpression": {
                  "enter": [
                    null
                  ]
                },
                "ReturnStatement": {
                  "enter": [
                    null
                  ]
                },
                "VariableDeclaration": {
                  "enter": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "minify-replace",
              "visitor": {
                "Program": {
                  "enter": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "minify-simplify",
              "visitor": {
                "UnaryExpression": {
                  "enter": [
                    null,
                    null,
                    null
                  ]
                },
                "BinaryExpression": {
                  "enter": [
                    null
                  ]
                },
                "LogicalExpression": {
                  "exit": [
                    null
                  ]
                },
                "AssignmentExpression": {
                  "enter": [
                    null
                  ]
                },
                "ConditionalExpression": {
                  "enter": [
                    null,
                    null
                  ],
                  "exit": [
                    null,
                    null,
                    null
                  ]
                },
                "VariableDeclaration": {
                  "enter": [
                    null
                  ],
                  "exit": [
                    null
                  ]
                },
                "ForStatement": {
                  "enter": [
                    null,
                    null
                  ],
                  "exit": [
                    null,
                    null,
                    null
                  ]
                },
                "Program": {
                  "enter": [
                    null
                  ]
                },
                "BlockStatement": {
                  "enter": [
                    null
                  ],
                  "exit": [
                    null,
                    null
                  ]
                },
                "ThrowStatement": {
                  "enter": [
                    null
                  ],
                  "exit": [
                    null
                  ]
                },
                "ReturnStatement": {
                  "enter": [
                    null,
                    null
                  ],
                  "exit": [
                    null
                  ]
                },
                "IfStatement": {
                  "exit": [
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                  ]
                },
                "WhileStatement": {
                  "enter": [
                    null
                  ],
                  "exit": [
                    null
                  ]
                },
                "ForInStatement": {
                  "enter": [
                    null,
                    null
                  ],
                  "exit": [
                    null,
                    null
                  ]
                },
                "SequenceExpression": {
                  "exit": [
                    null
                  ]
                },
                "SwitchCase": {
                  "enter": [
                    null
                  ]
                },
                "SwitchStatement": {
                  "exit": [
                    null,
                    null,
                    null,
                    null,
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true,
                "FunctionDeclaration": {
                  "exit": [
                    null,
                    null
                  ]
                },
                "FunctionExpression": {
                  "exit": [
                    null
                  ]
                },
                "ObjectMethod": {
                  "exit": [
                    null
                  ]
                },
                "ArrowFunctionExpression": {
                  "exit": [
                    null
                  ]
                },
                "ClassMethod": {
                  "exit": [
                    null
                  ]
                },
                "ClassPrivateMethod": {
                  "exit": [
                    null
                  ]
                },
                "ForOfStatement": {
                  "enter": [
                    null
                  ],
                  "exit": [
                    null,
                    null
                  ]
                },
                "BreakStatement": {
                  "exit": [
                    null
                  ]
                },
                "ContinueStatement": {
                  "exit": [
                    null
                  ]
                },
                "DebuggerStatement": {
                  "exit": [
                    null
                  ]
                },
                "DoWhileStatement": {
                  "exit": [
                    null
                  ]
                },
                "EmptyStatement": {
                  "exit": [
                    null
                  ]
                },
                "ExpressionStatement": {
                  "exit": [
                    null
                  ]
                },
                "LabeledStatement": {
                  "exit": [
                    null
                  ]
                },
                "TryStatement": {
                  "exit": [
                    null
                  ]
                },
                "WithStatement": {
                  "exit": [
                    null
                  ]
                },
                "ClassDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "ExportAllDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "ExportDefaultDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "ExportNamedDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "ImportDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "DeclareClass": {
                  "exit": [
                    null
                  ]
                },
                "DeclareFunction": {
                  "exit": [
                    null
                  ]
                },
                "DeclareInterface": {
                  "exit": [
                    null
                  ]
                },
                "DeclareModule": {
                  "exit": [
                    null
                  ]
                },
                "DeclareModuleExports": {
                  "exit": [
                    null
                  ]
                },
                "DeclareTypeAlias": {
                  "exit": [
                    null
                  ]
                },
                "DeclareOpaqueType": {
                  "exit": [
                    null
                  ]
                },
                "DeclareVariable": {
                  "exit": [
                    null
                  ]
                },
                "DeclareExportDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "DeclareExportAllDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "InterfaceDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "OpaqueType": {
                  "exit": [
                    null
                  ]
                },
                "TypeAlias": {
                  "exit": [
                    null
                  ]
                },
                "TSDeclareFunction": {
                  "exit": [
                    null
                  ]
                },
                "TSInterfaceDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "TSTypeAliasDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "TSEnumDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "TSModuleDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "TSImportEqualsDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "TSExportAssignment": {
                  "exit": [
                    null
                  ]
                },
                "TSNamespaceExportDeclaration": {
                  "exit": [
                    null
                  ]
                }
              },
              "options": {}
            },
            {
              "key": "transform-simplify-comparison-operators",
              "visitor": {
                "BinaryExpression": {
                  "enter": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "minify-type-constructors",
              "visitor": {
                "CallExpression": {
                  "enter": [
                    null
                  ]
                },
                "NewExpression": {
                  "enter": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "transform-undefined-to-void",
              "visitor": {
                "_exploded": true,
                "_verified": true,
                "Identifier": {
                  "enter": [
                    null
                  ]
                },
                "JSXIdentifier": {
                  "enter": [
                    null
                  ]
                }
              },
              "options": {}
            }
          ]
        }
      ],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/victor/WebstormProjects/aniversario-xesca/routes/index.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/victor/WebstormProjects/aniversario-xesca/routes/index.js",
        "comments": true,
        "compact": "auto",
        "minified": true,
        "sourceMaps": "both",
        "sourceRoot": "/home/victor/WebstormProjects/aniversario-xesca/routes",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";module.exports=function(a){var b=require(\"../controller/index\")(),c=a.Router();return c.get(\"/\",function(a,c,d){b.get(a,c,d)}),c.post(\"/\",function(a,c,d){b.post(a,c,d)}),c};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJleHByZXNzIiwiY29udHJvbGxlciIsInJlcXVpcmUiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJnZXQiLCJyZXEiLCJyZXMiLCJuZXh0IiwicG9zdCJdLCJtYXBwaW5ncyI6ImFBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxDQUFpQixTQUFDQyxDQUFELENBQWEsSUFDdEJDLENBQUFBLENBQVUsQ0FBR0MsT0FBTyxDQUFDLHFCQUFELENBQVAsRUFEUyxDQUV0QkMsQ0FBTSxDQUFHSCxDQUFPLENBQUNJLE1BQVIsRUFGYSxDQVM1QixNQU5BRCxDQUFBQSxDQUFNLENBQUNFLEdBQVAsQ0FBVyxHQUFYLENBQWdCLFNBQUNDLENBQUQsQ0FBTUMsQ0FBTixDQUFXQyxDQUFYLENBQWtCLENBQ2hDUCxDQUFVLENBQUNJLEdBQVgsQ0FBZUMsQ0FBZixDQUFvQkMsQ0FBcEIsQ0FBeUJDLENBQXpCLENBQ0QsQ0FGRCxDQU1BLENBSEFMLENBQU0sQ0FBQ00sSUFBUCxDQUFZLEdBQVosQ0FBaUIsU0FBQ0gsQ0FBRCxDQUFNQyxDQUFOLENBQVdDLENBQVgsQ0FBa0IsQ0FDakNQLENBQVUsQ0FBQ1EsSUFBWCxDQUFnQkgsQ0FBaEIsQ0FBcUJDLENBQXJCLENBQTBCQyxDQUExQixDQUNELENBRkQsQ0FHQSxDQUFPTCxDQUNSLEMiLCJzb3VyY2VSb290IjoiL2hvbWUvdmljdG9yL1dlYnN0b3JtUHJvamVjdHMvYW5pdmVyc2FyaW8teGVzY2Evcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSAoZXhwcmVzcykgPT4ge1xuICBjb25zdCBjb250cm9sbGVyID0gcmVxdWlyZSgnLi4vY29udHJvbGxlci9pbmRleCcpKCk7XG4gIGNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG4gIHJvdXRlci5nZXQoJy8nLCAocmVxLCByZXMsIG5leHQpPT57XG4gICAgY29udHJvbGxlci5nZXQocmVxLCByZXMsIG5leHQpO1xuICB9KTtcbiAgcm91dGVyLnBvc3QoJy8nLCAocmVxLCByZXMsIG5leHQpPT57XG4gICAgY29udHJvbGxlci5wb3N0KHJlcSwgcmVzLCBuZXh0KTtcbiAgfSk7XG4gIHJldHVybiByb3V0ZXI7XG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "module",
        "exports",
        "express",
        "controller",
        "require",
        "router",
        "Router",
        "get",
        "req",
        "res",
        "next",
        "post"
      ],
      "mappings": "aAAAA,MAAM,CAACC,OAAP,CAAiB,SAACC,CAAD,CAAa,IACtBC,CAAAA,CAAU,CAAGC,OAAO,CAAC,qBAAD,CAAP,EADS,CAEtBC,CAAM,CAAGH,CAAO,CAACI,MAAR,EAFa,CAS5B,MANAD,CAAAA,CAAM,CAACE,GAAP,CAAW,GAAX,CAAgB,SAACC,CAAD,CAAMC,CAAN,CAAWC,CAAX,CAAkB,CAChCP,CAAU,CAACI,GAAX,CAAeC,CAAf,CAAoBC,CAApB,CAAyBC,CAAzB,CACD,CAFD,CAMA,CAHAL,CAAM,CAACM,IAAP,CAAY,GAAZ,CAAiB,SAACH,CAAD,CAAMC,CAAN,CAAWC,CAAX,CAAkB,CACjCP,CAAU,CAACQ,IAAX,CAAgBH,CAAhB,CAAqBC,CAArB,CAA0BC,CAA1B,CACD,CAFD,CAGA,CAAOL,CACR,C",
      "sourceRoot": "/home/victor/WebstormProjects/aniversario-xesca/routes",
      "sourcesContent": [
        "module.exports = (express) => {\n  const controller = require('../controller/index')();\n  const router = express.Router();\n  router.get('/', (req, res, next)=>{\n    controller.get(req, res, next);\n  });\n  router.post('/', (req, res, next)=>{\n    controller.post(req, res, next);\n  });\n  return router;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1565840757062
  },
  "{\"minified\":true,\"sourceRoot\":\"/home/victor/WebstormProjects/aniversario-xesca/controller\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/victor/WebstormProjects/aniversario-xesca\",\"filename\":\"/home/victor/WebstormProjects/aniversario-xesca/controller/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":true,\"envName\":\"development\",\"root\":\"/home/victor/WebstormProjects/aniversario-xesca\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[{\"plugins\":[{\"key\":\"transform-minify-booleans\",\"visitor\":{\"BooleanLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"minify-builtins\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null]},\"CallExpression\":{\"exit\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-inline-consecutive-adds\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"minify-dead-code-elimination\",\"visitor\":{\"IfStatement\":{\"exit\":[null]},\"EmptyStatement\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"minify-constant-folding\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null,null]},\"MemberExpression\":{\"enter\":[null,null]},\"_exploded\":true,\"_verified\":true,\"ArrayExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ConditionalExpression\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Identifier\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"NumericLiteral\":{\"enter\":[null]},\"NullLiteral\":{\"enter\":[null]},\"BooleanLiteral\":{\"enter\":[null]},\"RegExpLiteral\":{\"enter\":[null]},\"LogicalExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"SequenceExpression\":{\"enter\":[null]},\"ParenthesizedExpression\":{\"enter\":[null]},\"ThisExpression\":{\"enter\":[null]},\"UnaryExpression\":{\"enter\":[null]},\"UpdateExpression\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"MetaProperty\":{\"enter\":[null]},\"Super\":{\"enter\":[null]},\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"YieldExpression\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]},\"AwaitExpression\":{\"enter\":[null]},\"BindExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"PipelinePrimaryTopicReference\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"Import\":{\"enter\":[null]},\"DoExpression\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"TSAsExpression\":{\"enter\":[null]},\"TSTypeAssertion\":{\"enter\":[null]},\"TSNonNullExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"minify-flip-comparisons\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"minify-guarded-expressions\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null,null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"minify-infinity\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"minify-mangle-names\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-merge-sibling-variables\",\"visitor\":{\"ForStatement\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null,null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"minify-numeric-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-regexp-constructors\",\"visitor\":{\"NewExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-remove-undefined\",\"visitor\":{\"SequenceExpression\":{\"enter\":[null]},\"ReturnStatement\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"minify-replace\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"minify-simplify\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null,null,null]},\"BinaryExpression\":{\"enter\":[null]},\"LogicalExpression\":{\"exit\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ConditionalExpression\":{\"enter\":[null,null],\"exit\":[null,null,null]},\"VariableDeclaration\":{\"enter\":[null],\"exit\":[null]},\"ForStatement\":{\"enter\":[null,null],\"exit\":[null,null,null]},\"Program\":{\"enter\":[null]},\"BlockStatement\":{\"enter\":[null],\"exit\":[null,null]},\"ThrowStatement\":{\"enter\":[null],\"exit\":[null]},\"ReturnStatement\":{\"enter\":[null,null],\"exit\":[null]},\"IfStatement\":{\"exit\":[null,null,null,null,null,null]},\"WhileStatement\":{\"enter\":[null],\"exit\":[null]},\"ForInStatement\":{\"enter\":[null,null],\"exit\":[null,null]},\"SequenceExpression\":{\"exit\":[null]},\"SwitchCase\":{\"enter\":[null]},\"SwitchStatement\":{\"exit\":[null,null,null,null,null]},\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null,null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]},\"ForOfStatement\":{\"enter\":[null],\"exit\":[null,null]},\"BreakStatement\":{\"exit\":[null]},\"ContinueStatement\":{\"exit\":[null]},\"DebuggerStatement\":{\"exit\":[null]},\"DoWhileStatement\":{\"exit\":[null]},\"EmptyStatement\":{\"exit\":[null]},\"ExpressionStatement\":{\"exit\":[null]},\"LabeledStatement\":{\"exit\":[null]},\"TryStatement\":{\"exit\":[null]},\"WithStatement\":{\"exit\":[null]},\"ClassDeclaration\":{\"exit\":[null]},\"ExportAllDeclaration\":{\"exit\":[null]},\"ExportDefaultDeclaration\":{\"exit\":[null]},\"ExportNamedDeclaration\":{\"exit\":[null]},\"ImportDeclaration\":{\"exit\":[null]},\"DeclareClass\":{\"exit\":[null]},\"DeclareFunction\":{\"exit\":[null]},\"DeclareInterface\":{\"exit\":[null]},\"DeclareModule\":{\"exit\":[null]},\"DeclareModuleExports\":{\"exit\":[null]},\"DeclareTypeAlias\":{\"exit\":[null]},\"DeclareOpaqueType\":{\"exit\":[null]},\"DeclareVariable\":{\"exit\":[null]},\"DeclareExportDeclaration\":{\"exit\":[null]},\"DeclareExportAllDeclaration\":{\"exit\":[null]},\"InterfaceDeclaration\":{\"exit\":[null]},\"OpaqueType\":{\"exit\":[null]},\"TypeAlias\":{\"exit\":[null]},\"TSDeclareFunction\":{\"exit\":[null]},\"TSInterfaceDeclaration\":{\"exit\":[null]},\"TSTypeAliasDeclaration\":{\"exit\":[null]},\"TSEnumDeclaration\":{\"exit\":[null]},\"TSModuleDeclaration\":{\"exit\":[null]},\"TSImportEqualsDeclaration\":{\"exit\":[null]},\"TSExportAssignment\":{\"exit\":[null]},\"TSNamespaceExportDeclaration\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-simplify-comparison-operators\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"minify-type-constructors\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-undefined-to-void\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}}]}]}:7.5.5": {
    "metadata": {},
    "options": {
      "minified": true,
      "sourceRoot": "/home/victor/WebstormProjects/aniversario-xesca/controller",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/victor/WebstormProjects/aniversario-xesca",
      "filename": "/home/victor/WebstormProjects/aniversario-xesca/controller/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/victor/WebstormProjects/aniversario-xesca",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": true,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [
        {
          "plugins": [
            {
              "key": "transform-minify-booleans",
              "visitor": {
                "BooleanLiteral": {
                  "enter": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "minify-builtins",
              "visitor": {
                "AssignmentExpression": {
                  "enter": [
                    null
                  ]
                },
                "MemberExpression": {
                  "enter": [
                    null
                  ]
                },
                "CallExpression": {
                  "exit": [
                    null
                  ]
                },
                "Program": {
                  "exit": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "transform-inline-consecutive-adds",
              "visitor": {
                "VariableDeclaration": {
                  "enter": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "minify-dead-code-elimination",
              "visitor": {
                "IfStatement": {
                  "exit": [
                    null
                  ]
                },
                "EmptyStatement": {
                  "enter": [
                    null
                  ]
                },
                "Program": {
                  "exit": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true,
                "FunctionDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "FunctionExpression": {
                  "exit": [
                    null
                  ]
                },
                "ObjectMethod": {
                  "exit": [
                    null
                  ]
                },
                "ArrowFunctionExpression": {
                  "exit": [
                    null
                  ]
                },
                "ClassMethod": {
                  "exit": [
                    null
                  ]
                },
                "ClassPrivateMethod": {
                  "exit": [
                    null
                  ]
                }
              },
              "options": {}
            },
            {
              "key": "minify-constant-folding",
              "visitor": {
                "BinaryExpression": {
                  "enter": [
                    null,
                    null
                  ]
                },
                "CallExpression": {
                  "enter": [
                    null,
                    null
                  ]
                },
                "MemberExpression": {
                  "enter": [
                    null,
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true,
                "ArrayExpression": {
                  "enter": [
                    null
                  ]
                },
                "AssignmentExpression": {
                  "enter": [
                    null
                  ]
                },
                "ConditionalExpression": {
                  "enter": [
                    null
                  ]
                },
                "FunctionExpression": {
                  "enter": [
                    null
                  ]
                },
                "Identifier": {
                  "enter": [
                    null
                  ]
                },
                "StringLiteral": {
                  "enter": [
                    null
                  ]
                },
                "NumericLiteral": {
                  "enter": [
                    null
                  ]
                },
                "NullLiteral": {
                  "enter": [
                    null
                  ]
                },
                "BooleanLiteral": {
                  "enter": [
                    null
                  ]
                },
                "RegExpLiteral": {
                  "enter": [
                    null
                  ]
                },
                "LogicalExpression": {
                  "enter": [
                    null
                  ]
                },
                "NewExpression": {
                  "enter": [
                    null
                  ]
                },
                "ObjectExpression": {
                  "enter": [
                    null
                  ]
                },
                "SequenceExpression": {
                  "enter": [
                    null
                  ]
                },
                "ParenthesizedExpression": {
                  "enter": [
                    null
                  ]
                },
                "ThisExpression": {
                  "enter": [
                    null
                  ]
                },
                "UnaryExpression": {
                  "enter": [
                    null
                  ]
                },
                "UpdateExpression": {
                  "enter": [
                    null
                  ]
                },
                "ArrowFunctionExpression": {
                  "enter": [
                    null
                  ]
                },
                "ClassExpression": {
                  "enter": [
                    null
                  ]
                },
                "MetaProperty": {
                  "enter": [
                    null
                  ]
                },
                "Super": {
                  "enter": [
                    null
                  ]
                },
                "TaggedTemplateExpression": {
                  "enter": [
                    null
                  ]
                },
                "TemplateLiteral": {
                  "enter": [
                    null
                  ]
                },
                "YieldExpression": {
                  "enter": [
                    null
                  ]
                },
                "TypeCastExpression": {
                  "enter": [
                    null
                  ]
                },
                "JSXElement": {
                  "enter": [
                    null
                  ]
                },
                "JSXFragment": {
                  "enter": [
                    null
                  ]
                },
                "AwaitExpression": {
                  "enter": [
                    null
                  ]
                },
                "BindExpression": {
                  "enter": [
                    null
                  ]
                },
                "OptionalMemberExpression": {
                  "enter": [
                    null
                  ]
                },
                "PipelinePrimaryTopicReference": {
                  "enter": [
                    null
                  ]
                },
                "OptionalCallExpression": {
                  "enter": [
                    null
                  ]
                },
                "Import": {
                  "enter": [
                    null
                  ]
                },
                "DoExpression": {
                  "enter": [
                    null
                  ]
                },
                "BigIntLiteral": {
                  "enter": [
                    null
                  ]
                },
                "TSAsExpression": {
                  "enter": [
                    null
                  ]
                },
                "TSTypeAssertion": {
                  "enter": [
                    null
                  ]
                },
                "TSNonNullExpression": {
                  "enter": [
                    null
                  ]
                }
              },
              "options": {}
            },
            {
              "key": "minify-flip-comparisons",
              "visitor": {
                "BinaryExpression": {
                  "enter": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "minify-guarded-expressions",
              "visitor": {
                "LogicalExpression": {
                  "enter": [
                    null,
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "minify-infinity",
              "visitor": {
                "Identifier": {
                  "enter": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "minify-mangle-names",
              "visitor": {
                "Program": {
                  "exit": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "transform-member-expression-literals",
              "visitor": {
                "MemberExpression": {
                  "exit": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "transform-merge-sibling-variables",
              "visitor": {
                "ForStatement": {
                  "enter": [
                    null
                  ]
                },
                "VariableDeclaration": {
                  "enter": [
                    null,
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "minify-numeric-literals",
              "visitor": {
                "NumericLiteral": {
                  "enter": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "transform-property-literals",
              "visitor": {
                "ObjectProperty": {
                  "exit": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "transform-regexp-constructors",
              "visitor": {
                "NewExpression": {
                  "enter": [
                    null
                  ]
                },
                "CallExpression": {
                  "enter": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "transform-remove-undefined",
              "visitor": {
                "SequenceExpression": {
                  "enter": [
                    null
                  ]
                },
                "ReturnStatement": {
                  "enter": [
                    null
                  ]
                },
                "VariableDeclaration": {
                  "enter": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "minify-replace",
              "visitor": {
                "Program": {
                  "enter": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "minify-simplify",
              "visitor": {
                "UnaryExpression": {
                  "enter": [
                    null,
                    null,
                    null
                  ]
                },
                "BinaryExpression": {
                  "enter": [
                    null
                  ]
                },
                "LogicalExpression": {
                  "exit": [
                    null
                  ]
                },
                "AssignmentExpression": {
                  "enter": [
                    null
                  ]
                },
                "ConditionalExpression": {
                  "enter": [
                    null,
                    null
                  ],
                  "exit": [
                    null,
                    null,
                    null
                  ]
                },
                "VariableDeclaration": {
                  "enter": [
                    null
                  ],
                  "exit": [
                    null
                  ]
                },
                "ForStatement": {
                  "enter": [
                    null,
                    null
                  ],
                  "exit": [
                    null,
                    null,
                    null
                  ]
                },
                "Program": {
                  "enter": [
                    null
                  ]
                },
                "BlockStatement": {
                  "enter": [
                    null
                  ],
                  "exit": [
                    null,
                    null
                  ]
                },
                "ThrowStatement": {
                  "enter": [
                    null
                  ],
                  "exit": [
                    null
                  ]
                },
                "ReturnStatement": {
                  "enter": [
                    null,
                    null
                  ],
                  "exit": [
                    null
                  ]
                },
                "IfStatement": {
                  "exit": [
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                  ]
                },
                "WhileStatement": {
                  "enter": [
                    null
                  ],
                  "exit": [
                    null
                  ]
                },
                "ForInStatement": {
                  "enter": [
                    null,
                    null
                  ],
                  "exit": [
                    null,
                    null
                  ]
                },
                "SequenceExpression": {
                  "exit": [
                    null
                  ]
                },
                "SwitchCase": {
                  "enter": [
                    null
                  ]
                },
                "SwitchStatement": {
                  "exit": [
                    null,
                    null,
                    null,
                    null,
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true,
                "FunctionDeclaration": {
                  "exit": [
                    null,
                    null
                  ]
                },
                "FunctionExpression": {
                  "exit": [
                    null
                  ]
                },
                "ObjectMethod": {
                  "exit": [
                    null
                  ]
                },
                "ArrowFunctionExpression": {
                  "exit": [
                    null
                  ]
                },
                "ClassMethod": {
                  "exit": [
                    null
                  ]
                },
                "ClassPrivateMethod": {
                  "exit": [
                    null
                  ]
                },
                "ForOfStatement": {
                  "enter": [
                    null
                  ],
                  "exit": [
                    null,
                    null
                  ]
                },
                "BreakStatement": {
                  "exit": [
                    null
                  ]
                },
                "ContinueStatement": {
                  "exit": [
                    null
                  ]
                },
                "DebuggerStatement": {
                  "exit": [
                    null
                  ]
                },
                "DoWhileStatement": {
                  "exit": [
                    null
                  ]
                },
                "EmptyStatement": {
                  "exit": [
                    null
                  ]
                },
                "ExpressionStatement": {
                  "exit": [
                    null
                  ]
                },
                "LabeledStatement": {
                  "exit": [
                    null
                  ]
                },
                "TryStatement": {
                  "exit": [
                    null
                  ]
                },
                "WithStatement": {
                  "exit": [
                    null
                  ]
                },
                "ClassDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "ExportAllDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "ExportDefaultDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "ExportNamedDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "ImportDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "DeclareClass": {
                  "exit": [
                    null
                  ]
                },
                "DeclareFunction": {
                  "exit": [
                    null
                  ]
                },
                "DeclareInterface": {
                  "exit": [
                    null
                  ]
                },
                "DeclareModule": {
                  "exit": [
                    null
                  ]
                },
                "DeclareModuleExports": {
                  "exit": [
                    null
                  ]
                },
                "DeclareTypeAlias": {
                  "exit": [
                    null
                  ]
                },
                "DeclareOpaqueType": {
                  "exit": [
                    null
                  ]
                },
                "DeclareVariable": {
                  "exit": [
                    null
                  ]
                },
                "DeclareExportDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "DeclareExportAllDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "InterfaceDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "OpaqueType": {
                  "exit": [
                    null
                  ]
                },
                "TypeAlias": {
                  "exit": [
                    null
                  ]
                },
                "TSDeclareFunction": {
                  "exit": [
                    null
                  ]
                },
                "TSInterfaceDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "TSTypeAliasDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "TSEnumDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "TSModuleDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "TSImportEqualsDeclaration": {
                  "exit": [
                    null
                  ]
                },
                "TSExportAssignment": {
                  "exit": [
                    null
                  ]
                },
                "TSNamespaceExportDeclaration": {
                  "exit": [
                    null
                  ]
                }
              },
              "options": {}
            },
            {
              "key": "transform-simplify-comparison-operators",
              "visitor": {
                "BinaryExpression": {
                  "enter": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "minify-type-constructors",
              "visitor": {
                "CallExpression": {
                  "enter": [
                    null
                  ]
                },
                "NewExpression": {
                  "enter": [
                    null
                  ]
                },
                "_exploded": true,
                "_verified": true
              },
              "options": {}
            },
            {
              "key": "transform-undefined-to-void",
              "visitor": {
                "_exploded": true,
                "_verified": true,
                "Identifier": {
                  "enter": [
                    null
                  ]
                },
                "JSXIdentifier": {
                  "enter": [
                    null
                  ]
                }
              },
              "options": {}
            }
          ]
        }
      ],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/victor/WebstormProjects/aniversario-xesca/controller/index.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/victor/WebstormProjects/aniversario-xesca/controller/index.js",
        "comments": true,
        "compact": "auto",
        "minified": true,
        "sourceMaps": "both",
        "sourceRoot": "/home/victor/WebstormProjects/aniversario-xesca/controller",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";var _this=void 0;module.exports=function(){return _this.get=function(a,b){b.render(\"index\")},_this.post=function(){// console.log('Hey Macarena');\n},_this};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJnZXQiLCJyZXEiLCJyZXMiLCJyZW5kZXIiLCJwb3N0Il0sIm1hcHBpbmdzIjoiOEJBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxDQUFpQixVQUFJLENBU2pCLE1BUkEsQ0FBQSxLQUFJLENBQUNDLEdBQUwsQ0FBVyxTQUFDQyxDQUFELENBQU1DLENBQU4sQ0FBa0IsQ0FDekJBLENBQUcsQ0FBQ0MsTUFBSixDQUFXLE9BQVgsQ0FDSCxDQU1ELENBSkEsS0FBSSxDQUFDQyxJQUFMLENBQVksVUFBa0IsQ0FDMUI7QUFDSCxDQUVELENBQU8sS0FDVixDIiwic291cmNlUm9vdCI6Ii9ob21lL3ZpY3Rvci9XZWJzdG9ybVByb2plY3RzL2FuaXZlcnNhcmlvLXhlc2NhL2NvbnRyb2xsZXIiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9ICgpPT57XG4gICAgdGhpcy5nZXQgPSAocmVxLCByZXMsIG5leHQpPT57XG4gICAgICAgIHJlcy5yZW5kZXIoJ2luZGV4Jyk7XG4gICAgfTtcblxuICAgIHRoaXMucG9zdCA9IChyZXEsIHJlcywgbmV4dCk9PntcbiAgICAgICAgLy8gY29uc29sZS5sb2coJ0hleSBNYWNhcmVuYScpO1xuICAgIH07XG5cbiAgICByZXR1cm4gdGhpcztcbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "module",
        "exports",
        "get",
        "req",
        "res",
        "render",
        "post"
      ],
      "mappings": "8BAAAA,MAAM,CAACC,OAAP,CAAiB,UAAI,CASjB,MARA,CAAA,KAAI,CAACC,GAAL,CAAW,SAACC,CAAD,CAAMC,CAAN,CAAkB,CACzBA,CAAG,CAACC,MAAJ,CAAW,OAAX,CACH,CAMD,CAJA,KAAI,CAACC,IAAL,CAAY,UAAkB,CAC1B;AACH,CAED,CAAO,KACV,C",
      "sourceRoot": "/home/victor/WebstormProjects/aniversario-xesca/controller",
      "sourcesContent": [
        "module.exports = ()=>{\n    this.get = (req, res, next)=>{\n        res.render('index');\n    };\n\n    this.post = (req, res, next)=>{\n        // console.log('Hey Macarena');\n    };\n\n    return this;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1566097948526
  },
  "{\"sourceRoot\":\"/home/victor/WebstormProjects/aniversario-xesca\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/victor/WebstormProjects/aniversario-xesca\",\"filename\":\"/home/victor/WebstormProjects/aniversario-xesca/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/victor/WebstormProjects/aniversario-xesca\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/victor/WebstormProjects/aniversario-xesca",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/victor/WebstormProjects/aniversario-xesca",
      "filename": "/home/victor/WebstormProjects/aniversario-xesca/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/victor/WebstormProjects/aniversario-xesca",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/victor/WebstormProjects/aniversario-xesca/app.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/victor/WebstormProjects/aniversario-xesca/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/victor/WebstormProjects/aniversario-xesca",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar createError = require('http-errors');\n\nvar express = require('express');\n\nvar path = require('path');\n\nvar cookieParser = require('cookie-parser');\n\nvar logger = require('morgan');\n\nvar session = require('express-session');\n\nvar indexRouter = require('./routes');\n\nvar app = express();\napp.use(session({\n  secret: 'ssshhhhh',\n  proxy: true,\n  resave: true,\n  saveUninitialized: true\n})); // view engine setup\n\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'pug');\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({\n  extended: false\n}));\napp.use(cookieParser());\napp.use(express[\"static\"](path.join(__dirname, 'public')));\napp.use('/', indexRouter(express)); // catch 404 and forward to error handler\n\napp.use(function (req, res, next) {\n  next(createError(404));\n}); // error handler\n\napp.use(function (err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {}; // render the error page\n\n  res.status(err.status || 500);\n  res.render('error');\n});\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJjcmVhdGVFcnJvciIsInJlcXVpcmUiLCJleHByZXNzIiwicGF0aCIsImNvb2tpZVBhcnNlciIsImxvZ2dlciIsInNlc3Npb24iLCJpbmRleFJvdXRlciIsImFwcCIsInVzZSIsInNlY3JldCIsInByb3h5IiwicmVzYXZlIiwic2F2ZVVuaW5pdGlhbGl6ZWQiLCJzZXQiLCJqb2luIiwiX19kaXJuYW1lIiwianNvbiIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsInJlcSIsInJlcyIsIm5leHQiLCJlcnIiLCJsb2NhbHMiLCJtZXNzYWdlIiwiZXJyb3IiLCJnZXQiLCJzdGF0dXMiLCJyZW5kZXIiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLFdBQVcsR0FBR0MsT0FBTyxDQUFDLGFBQUQsQ0FBekI7O0FBQ0EsSUFBSUMsT0FBTyxHQUFHRCxPQUFPLENBQUMsU0FBRCxDQUFyQjs7QUFDQSxJQUFJRSxJQUFJLEdBQUdGLE9BQU8sQ0FBQyxNQUFELENBQWxCOztBQUNBLElBQUlHLFlBQVksR0FBR0gsT0FBTyxDQUFDLGVBQUQsQ0FBMUI7O0FBQ0EsSUFBSUksTUFBTSxHQUFHSixPQUFPLENBQUMsUUFBRCxDQUFwQjs7QUFDQSxJQUFJSyxPQUFPLEdBQUdMLE9BQU8sQ0FBQyxpQkFBRCxDQUFyQjs7QUFDQSxJQUFJTSxXQUFXLEdBQUdOLE9BQU8sQ0FBQyxVQUFELENBQXpCOztBQUVBLElBQUlPLEdBQUcsR0FBR04sT0FBTyxFQUFqQjtBQUVBTSxHQUFHLENBQUNDLEdBQUosQ0FBUUgsT0FBTyxDQUFDO0FBQUNJLEVBQUFBLE1BQU0sRUFBRSxVQUFUO0FBQXFCQyxFQUFBQSxLQUFLLEVBQUUsSUFBNUI7QUFBa0NDLEVBQUFBLE1BQU0sRUFBRSxJQUExQztBQUFnREMsRUFBQUEsaUJBQWlCLEVBQUU7QUFBbkUsQ0FBRCxDQUFmLEUsQ0FFQTs7QUFDQUwsR0FBRyxDQUFDTSxHQUFKLENBQVEsT0FBUixFQUFpQlgsSUFBSSxDQUFDWSxJQUFMLENBQVVDLFNBQVYsRUFBcUIsT0FBckIsQ0FBakI7QUFDQVIsR0FBRyxDQUFDTSxHQUFKLENBQVEsYUFBUixFQUF1QixLQUF2QjtBQUVBTixHQUFHLENBQUNDLEdBQUosQ0FBUUosTUFBTSxDQUFDLEtBQUQsQ0FBZDtBQUNBRyxHQUFHLENBQUNDLEdBQUosQ0FBUVAsT0FBTyxDQUFDZSxJQUFSLEVBQVI7QUFDQVQsR0FBRyxDQUFDQyxHQUFKLENBQVFQLE9BQU8sQ0FBQ2dCLFVBQVIsQ0FBbUI7QUFBRUMsRUFBQUEsUUFBUSxFQUFFO0FBQVosQ0FBbkIsQ0FBUjtBQUNBWCxHQUFHLENBQUNDLEdBQUosQ0FBUUwsWUFBWSxFQUFwQjtBQUNBSSxHQUFHLENBQUNDLEdBQUosQ0FBUVAsT0FBTyxVQUFQLENBQWVDLElBQUksQ0FBQ1ksSUFBTCxDQUFVQyxTQUFWLEVBQXFCLFFBQXJCLENBQWYsQ0FBUjtBQUVBUixHQUFHLENBQUNDLEdBQUosQ0FBUSxHQUFSLEVBQWFGLFdBQVcsQ0FBQ0wsT0FBRCxDQUF4QixFLENBRUE7O0FBQ0FNLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFVBQVNXLEdBQVQsRUFBY0MsR0FBZCxFQUFtQkMsSUFBbkIsRUFBeUI7QUFDL0JBLEVBQUFBLElBQUksQ0FBQ3RCLFdBQVcsQ0FBQyxHQUFELENBQVosQ0FBSjtBQUNELENBRkQsRSxDQUlBOztBQUNBUSxHQUFHLENBQUNDLEdBQUosQ0FBUSxVQUFTYyxHQUFULEVBQWNILEdBQWQsRUFBbUJDLEdBQW5CLEVBQXdCQyxJQUF4QixFQUE4QjtBQUNwQztBQUNBRCxFQUFBQSxHQUFHLENBQUNHLE1BQUosQ0FBV0MsT0FBWCxHQUFxQkYsR0FBRyxDQUFDRSxPQUF6QjtBQUNBSixFQUFBQSxHQUFHLENBQUNHLE1BQUosQ0FBV0UsS0FBWCxHQUFtQk4sR0FBRyxDQUFDWixHQUFKLENBQVFtQixHQUFSLENBQVksS0FBWixNQUF1QixhQUF2QixHQUF1Q0osR0FBdkMsR0FBNkMsRUFBaEUsQ0FIb0MsQ0FLcEM7O0FBQ0FGLEVBQUFBLEdBQUcsQ0FBQ08sTUFBSixDQUFXTCxHQUFHLENBQUNLLE1BQUosSUFBYyxHQUF6QjtBQUNBUCxFQUFBQSxHQUFHLENBQUNRLE1BQUosQ0FBVyxPQUFYO0FBQ0QsQ0FSRDtBQVVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJ2QixHQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS92aWN0b3IvV2Vic3Rvcm1Qcm9qZWN0cy9hbml2ZXJzYXJpby14ZXNjYSIsInNvdXJjZXNDb250ZW50IjpbInZhciBjcmVhdGVFcnJvciA9IHJlcXVpcmUoJ2h0dHAtZXJyb3JzJyk7XG52YXIgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbnZhciBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xudmFyIGNvb2tpZVBhcnNlciA9IHJlcXVpcmUoJ2Nvb2tpZS1wYXJzZXInKTtcbnZhciBsb2dnZXIgPSByZXF1aXJlKCdtb3JnYW4nKTtcbnZhciBzZXNzaW9uID0gcmVxdWlyZSgnZXhwcmVzcy1zZXNzaW9uJyk7XG52YXIgaW5kZXhSb3V0ZXIgPSByZXF1aXJlKCcuL3JvdXRlcycpO1xuXG52YXIgYXBwID0gZXhwcmVzcygpO1xuXG5hcHAudXNlKHNlc3Npb24oe3NlY3JldDogJ3Nzc2hoaGhoJywgcHJveHk6IHRydWUsIHJlc2F2ZTogdHJ1ZSwgc2F2ZVVuaW5pdGlhbGl6ZWQ6IHRydWV9KSk7XG5cbi8vIHZpZXcgZW5naW5lIHNldHVwXG5hcHAuc2V0KCd2aWV3cycsIHBhdGguam9pbihfX2Rpcm5hbWUsICd2aWV3cycpKTtcbmFwcC5zZXQoJ3ZpZXcgZW5naW5lJywgJ3B1ZycpO1xuXG5hcHAudXNlKGxvZ2dlcignZGV2JykpO1xuYXBwLnVzZShleHByZXNzLmpzb24oKSk7XG5hcHAudXNlKGV4cHJlc3MudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiBmYWxzZSB9KSk7XG5hcHAudXNlKGNvb2tpZVBhcnNlcigpKTtcbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMocGF0aC5qb2luKF9fZGlybmFtZSwgJ3B1YmxpYycpKSk7XG5cbmFwcC51c2UoJy8nLCBpbmRleFJvdXRlcihleHByZXNzKSk7XG5cbi8vIGNhdGNoIDQwNCBhbmQgZm9yd2FyZCB0byBlcnJvciBoYW5kbGVyXG5hcHAudXNlKGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0KSB7XG4gIG5leHQoY3JlYXRlRXJyb3IoNDA0KSk7XG59KTtcblxuLy8gZXJyb3IgaGFuZGxlclxuYXBwLnVzZShmdW5jdGlvbihlcnIsIHJlcSwgcmVzLCBuZXh0KSB7XG4gIC8vIHNldCBsb2NhbHMsIG9ubHkgcHJvdmlkaW5nIGVycm9yIGluIGRldmVsb3BtZW50XG4gIHJlcy5sb2NhbHMubWVzc2FnZSA9IGVyci5tZXNzYWdlO1xuICByZXMubG9jYWxzLmVycm9yID0gcmVxLmFwcC5nZXQoJ2VudicpID09PSAnZGV2ZWxvcG1lbnQnID8gZXJyIDoge307XG5cbiAgLy8gcmVuZGVyIHRoZSBlcnJvciBwYWdlXG4gIHJlcy5zdGF0dXMoZXJyLnN0YXR1cyB8fCA1MDApO1xuICByZXMucmVuZGVyKCdlcnJvcicpO1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gYXBwO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "createError",
        "require",
        "express",
        "path",
        "cookieParser",
        "logger",
        "session",
        "indexRouter",
        "app",
        "use",
        "secret",
        "proxy",
        "resave",
        "saveUninitialized",
        "set",
        "join",
        "__dirname",
        "json",
        "urlencoded",
        "extended",
        "req",
        "res",
        "next",
        "err",
        "locals",
        "message",
        "error",
        "get",
        "status",
        "render",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,aAAD,CAAzB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIG,YAAY,GAAGH,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAII,MAAM,GAAGJ,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIK,OAAO,GAAGL,OAAO,CAAC,iBAAD,CAArB;;AACA,IAAIM,WAAW,GAAGN,OAAO,CAAC,UAAD,CAAzB;;AAEA,IAAIO,GAAG,GAAGN,OAAO,EAAjB;AAEAM,GAAG,CAACC,GAAJ,CAAQH,OAAO,CAAC;AAACI,EAAAA,MAAM,EAAE,UAAT;AAAqBC,EAAAA,KAAK,EAAE,IAA5B;AAAkCC,EAAAA,MAAM,EAAE,IAA1C;AAAgDC,EAAAA,iBAAiB,EAAE;AAAnE,CAAD,CAAf,E,CAEA;;AACAL,GAAG,CAACM,GAAJ,CAAQ,OAAR,EAAiBX,IAAI,CAACY,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB;AACAR,GAAG,CAACM,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AAEAN,GAAG,CAACC,GAAJ,CAAQJ,MAAM,CAAC,KAAD,CAAd;AACAG,GAAG,CAACC,GAAJ,CAAQP,OAAO,CAACe,IAAR,EAAR;AACAT,GAAG,CAACC,GAAJ,CAAQP,OAAO,CAACgB,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AACAX,GAAG,CAACC,GAAJ,CAAQL,YAAY,EAApB;AACAI,GAAG,CAACC,GAAJ,CAAQP,OAAO,UAAP,CAAeC,IAAI,CAACY,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;AAEAR,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaF,WAAW,CAACL,OAAD,CAAxB,E,CAEA;;AACAM,GAAG,CAACC,GAAJ,CAAQ,UAASW,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC/BA,EAAAA,IAAI,CAACtB,WAAW,CAAC,GAAD,CAAZ,CAAJ;AACD,CAFD,E,CAIA;;AACAQ,GAAG,CAACC,GAAJ,CAAQ,UAASc,GAAT,EAAcH,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AACpC;AACAD,EAAAA,GAAG,CAACG,MAAJ,CAAWC,OAAX,GAAqBF,GAAG,CAACE,OAAzB;AACAJ,EAAAA,GAAG,CAACG,MAAJ,CAAWE,KAAX,GAAmBN,GAAG,CAACZ,GAAJ,CAAQmB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCJ,GAAvC,GAA6C,EAAhE,CAHoC,CAKpC;;AACAF,EAAAA,GAAG,CAACO,MAAJ,CAAWL,GAAG,CAACK,MAAJ,IAAc,GAAzB;AACAP,EAAAA,GAAG,CAACQ,MAAJ,CAAW,OAAX;AACD,CARD;AAUAC,MAAM,CAACC,OAAP,GAAiBvB,GAAjB",
      "sourceRoot": "/home/victor/WebstormProjects/aniversario-xesca",
      "sourcesContent": [
        "var createError = require('http-errors');\nvar express = require('express');\nvar path = require('path');\nvar cookieParser = require('cookie-parser');\nvar logger = require('morgan');\nvar session = require('express-session');\nvar indexRouter = require('./routes');\n\nvar app = express();\n\napp.use(session({secret: 'ssshhhhh', proxy: true, resave: true, saveUninitialized: true}));\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'pug');\n\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', indexRouter(express));\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  next(createError(404));\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\nmodule.exports = app;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1566098145329
  },
  "{\"sourceRoot\":\"/home/victor/WebstormProjects/aniversario-xesca/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/victor/WebstormProjects/aniversario-xesca\",\"filename\":\"/home/victor/WebstormProjects/aniversario-xesca/routes/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/victor/WebstormProjects/aniversario-xesca\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/victor/WebstormProjects/aniversario-xesca/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/victor/WebstormProjects/aniversario-xesca",
      "filename": "/home/victor/WebstormProjects/aniversario-xesca/routes/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/victor/WebstormProjects/aniversario-xesca",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/victor/WebstormProjects/aniversario-xesca/routes/index.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/victor/WebstormProjects/aniversario-xesca/routes/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/victor/WebstormProjects/aniversario-xesca/routes",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (express) {\n  var controller = require('../controller/index')();\n\n  console.log(controller);\n  var router = express.Router();\n  router.get('/', function (req, res, next) {\n    controller.get(req, res, next);\n  });\n  router.post('/', function (req, res, next) {\n    controller.post(req, res, next);\n  });\n  return router;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJleHByZXNzIiwiY29udHJvbGxlciIsInJlcXVpcmUiLCJjb25zb2xlIiwibG9nIiwicm91dGVyIiwiUm91dGVyIiwiZ2V0IiwicmVxIiwicmVzIiwibmV4dCIsInBvc3QiXSwibWFwcGluZ3MiOiI7O0FBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFDQyxPQUFELEVBQWE7QUFDNUIsTUFBTUMsVUFBVSxHQUFHQyxPQUFPLENBQUMscUJBQUQsQ0FBUCxFQUFuQjs7QUFDQUMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlILFVBQVo7QUFDQSxNQUFNSSxNQUFNLEdBQUdMLE9BQU8sQ0FBQ00sTUFBUixFQUFmO0FBQ0FELEVBQUFBLE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLEdBQVgsRUFBZ0IsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsRUFBa0I7QUFDaENULElBQUFBLFVBQVUsQ0FBQ00sR0FBWCxDQUFlQyxHQUFmLEVBQW9CQyxHQUFwQixFQUF5QkMsSUFBekI7QUFDRCxHQUZEO0FBR0FMLEVBQUFBLE1BQU0sQ0FBQ00sSUFBUCxDQUFZLEdBQVosRUFBaUIsVUFBQ0gsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsRUFBa0I7QUFDakNULElBQUFBLFVBQVUsQ0FBQ1UsSUFBWCxDQUFnQkgsR0FBaEIsRUFBcUJDLEdBQXJCLEVBQTBCQyxJQUExQjtBQUNELEdBRkQ7QUFHQSxTQUFPTCxNQUFQO0FBQ0QsQ0FYRCIsInNvdXJjZVJvb3QiOiIvaG9tZS92aWN0b3IvV2Vic3Rvcm1Qcm9qZWN0cy9hbml2ZXJzYXJpby14ZXNjYS9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IChleHByZXNzKSA9PiB7XG4gIGNvbnN0IGNvbnRyb2xsZXIgPSByZXF1aXJlKCcuLi9jb250cm9sbGVyL2luZGV4JykoKTtcbiAgY29uc29sZS5sb2coY29udHJvbGxlcik7XG4gIGNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG4gIHJvdXRlci5nZXQoJy8nLCAocmVxLCByZXMsIG5leHQpPT57XG4gICAgY29udHJvbGxlci5nZXQocmVxLCByZXMsIG5leHQpO1xuICB9KTtcbiAgcm91dGVyLnBvc3QoJy8nLCAocmVxLCByZXMsIG5leHQpPT57XG4gICAgY29udHJvbGxlci5wb3N0KHJlcSwgcmVzLCBuZXh0KTtcbiAgfSk7XG4gIHJldHVybiByb3V0ZXI7XG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "module",
        "exports",
        "express",
        "controller",
        "require",
        "console",
        "log",
        "router",
        "Router",
        "get",
        "req",
        "res",
        "next",
        "post"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,OAAD,EAAa;AAC5B,MAAMC,UAAU,GAAGC,OAAO,CAAC,qBAAD,CAAP,EAAnB;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACA,MAAMI,MAAM,GAAGL,OAAO,CAACM,MAAR,EAAf;AACAD,EAAAA,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAkB;AAChCT,IAAAA,UAAU,CAACM,GAAX,CAAeC,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB;AACD,GAFD;AAGAL,EAAAA,MAAM,CAACM,IAAP,CAAY,GAAZ,EAAiB,UAACH,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAkB;AACjCT,IAAAA,UAAU,CAACU,IAAX,CAAgBH,GAAhB,EAAqBC,GAArB,EAA0BC,IAA1B;AACD,GAFD;AAGA,SAAOL,MAAP;AACD,CAXD",
      "sourceRoot": "/home/victor/WebstormProjects/aniversario-xesca/routes",
      "sourcesContent": [
        "module.exports = (express) => {\n  const controller = require('../controller/index')();\n  console.log(controller);\n  const router = express.Router();\n  router.get('/', (req, res, next)=>{\n    controller.get(req, res, next);\n  });\n  router.post('/', (req, res, next)=>{\n    controller.post(req, res, next);\n  });\n  return router;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1566098334036
  },
  "{\"sourceRoot\":\"/home/victor/WebstormProjects/aniversario-xesca/controller\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/victor/WebstormProjects/aniversario-xesca\",\"filename\":\"/home/victor/WebstormProjects/aniversario-xesca/controller/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/victor/WebstormProjects/aniversario-xesca\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/victor/WebstormProjects/aniversario-xesca/controller",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/victor/WebstormProjects/aniversario-xesca",
      "filename": "/home/victor/WebstormProjects/aniversario-xesca/controller/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/victor/WebstormProjects/aniversario-xesca",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/victor/WebstormProjects/aniversario-xesca/controller/index.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/victor/WebstormProjects/aniversario-xesca/controller/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/victor/WebstormProjects/aniversario-xesca/controller",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _this = void 0;\n\nmodule.exports = function () {\n  _this.get = function (req, res, next) {\n    res.render('index');\n  };\n\n  _this.post = function (req, res, next) {\n    console.log('Hey Macarena');\n  };\n\n  return _this;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJnZXQiLCJyZXEiLCJyZXMiLCJuZXh0IiwicmVuZGVyIiwicG9zdCIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7Ozs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFlBQUk7QUFDakIsRUFBQSxLQUFJLENBQUNDLEdBQUwsR0FBVyxVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFrQjtBQUN6QkQsSUFBQUEsR0FBRyxDQUFDRSxNQUFKLENBQVcsT0FBWDtBQUNILEdBRkQ7O0FBSUEsRUFBQSxLQUFJLENBQUNDLElBQUwsR0FBWSxVQUFDSixHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFrQjtBQUMxQkcsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksY0FBWjtBQUNILEdBRkQ7O0FBSUEsU0FBTyxLQUFQO0FBQ0gsQ0FWRCIsInNvdXJjZVJvb3QiOiIvaG9tZS92aWN0b3IvV2Vic3Rvcm1Qcm9qZWN0cy9hbml2ZXJzYXJpby14ZXNjYS9jb250cm9sbGVyIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSAoKT0+e1xuICAgIHRoaXMuZ2V0ID0gKHJlcSwgcmVzLCBuZXh0KT0+e1xuICAgICAgICByZXMucmVuZGVyKCdpbmRleCcpO1xuICAgIH07XG5cbiAgICB0aGlzLnBvc3QgPSAocmVxLCByZXMsIG5leHQpPT57XG4gICAgICAgIGNvbnNvbGUubG9nKCdIZXkgTWFjYXJlbmEnKTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIHRoaXM7XG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "module",
        "exports",
        "get",
        "req",
        "res",
        "next",
        "render",
        "post",
        "console",
        "log"
      ],
      "mappings": ";;;;AAAAA,MAAM,CAACC,OAAP,GAAiB,YAAI;AACjB,EAAA,KAAI,CAACC,GAAL,GAAW,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAkB;AACzBD,IAAAA,GAAG,CAACE,MAAJ,CAAW,OAAX;AACH,GAFD;;AAIA,EAAA,KAAI,CAACC,IAAL,GAAY,UAACJ,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAkB;AAC1BG,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH,GAFD;;AAIA,SAAO,KAAP;AACH,CAVD",
      "sourceRoot": "/home/victor/WebstormProjects/aniversario-xesca/controller",
      "sourcesContent": [
        "module.exports = ()=>{\n    this.get = (req, res, next)=>{\n        res.render('index');\n    };\n\n    this.post = (req, res, next)=>{\n        console.log('Hey Macarena');\n    };\n\n    return this;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1566098413317
  }
}